limits:
  max_input_bytes: 1073741824

source:
  kind: csv
  csv:
    paths:
      sales: ./etl_agent/data/sales_dataset.csv
      features: ./etl_agent/data/Features_dataset.csv
      stores: ./etl_agent/data/stores_dataset.csv

transform:
  sql: |
transform:
  sql: |
    WITH
    parsed_sales AS (
      SELECT
        CAST(Store AS INT) AS Store,
        CAST(Dept  AS INT) AS Dept,
        COALESCE(CAST(Weekly_Sales AS DOUBLE), 0.0) AS Weekly_Sales,
        CAST(IsHoliday AS BOOLEAN) AS IsHoliday,
        /* parse Date in multiple formats, fall back if needed */
        CAST(
          COALESCE(
            try_strptime(CAST(Date AS VARCHAR), '%m/%d/%Y'),
            try_strptime(CAST(Date AS VARCHAR), '%Y-%m-%d')
          )
          AS DATE
        ) AS d
      FROM sales
    ),
    parsed_features AS (
      SELECT
        CAST(Store AS INT) AS Store,
        CAST(
          COALESCE(
            try_strptime(CAST(Date AS VARCHAR), '%m/%d/%Y'),
            try_strptime(CAST(Date AS VARCHAR), '%Y-%m-%d')
          )
          AS DATE
        ) AS d,
        CAST(Temperature AS DOUBLE)  AS Temperature,
        CAST(Fuel_Price  AS DOUBLE)  AS Fuel_Price,
        CAST(CPI         AS DOUBLE)  AS CPI,
        CAST(Unemployment AS DOUBLE) AS Unemployment
      FROM features
    ),
    joined AS (
      SELECT
        s.Store,
        s.Dept,
        DATE_TRUNC('week', s.d) AS week,
        s.Weekly_Sales,
        s.IsHoliday,
        f.Temperature, f.Fuel_Price, f.CPI, f.Unemployment,
        sc.Type,
        CAST(sc.Size AS BIGINT) AS Store_Size
      FROM parsed_sales s
      LEFT JOIN parsed_features f
        ON s.Store = f.Store AND s.d = f.d
      LEFT JOIN stores sc
        ON s.Store = CAST(sc.Store AS INT)
    )
    SELECT
      Store, Dept, week,
      SUM(Weekly_Sales) AS weekly_sales,
      AVG(Weekly_Sales) AS avg_weekly_sales,
      SUM(CASE WHEN IsHoliday THEN Weekly_Sales ELSE 0 END) AS holiday_sales,
      AVG(Temperature)  AS avg_temp,
      AVG(Fuel_Price)   AS avg_fuel,
      AVG(CPI)          AS avg_cpi,
      AVG(Unemployment) AS avg_unemployment,
      Type,
      Store_Size
    FROM joined
    GROUP BY Store, Dept, week, Type, Store_Size
    ORDER BY Store, Dept, week;

load:
  to: csv
  file_path: ./etl_agent_output.csv
  include_header: true

checks:
  min_rows: 10
  nonnull_cols: [Store, Dept, week, weekly_sales]

verify:
  min_rows: 10
  nonnull_cols: [Store, Dept, week, weekly_sales]
